{"ast":null,"code":"var _jsxFileName = \"/home/guilty/SpringBootReact/src/js/src/App.js\";\nimport React, { Component } from 'react';\nimport Container from './Container';\nimport './App.css';\nimport { getAllStudents } from './client';\nimport { Table, Avatar, Spin, Icon } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getIndicatorIcon = () => /*#__PURE__*/_jsxDEV(LoadingOutlined, {\n  style: {\n    fontSize: 24\n  },\n  spin: true\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 32\n}, this);\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      students: [],\n      isFetching: false\n    };\n\n    this.fetchStudents = () => {\n      this.setState({\n        isFetching: true\n      });\n      getAllStudents().then(res => res.json().then(students => {\n        console.log(students);\n        this.setState({\n          students,\n          isFetching: false\n        });\n      }));\n    };\n  }\n\n  componentDidMount() {\n    this.fetchStudents();\n  }\n\n  render() {\n    const {\n      students,\n      isFetching\n    } = this.state;\n\n    if (isFetching) {\n      return /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Spin, {\n          indicator: LoadingOutlined()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this);\n    }\n\n    if (students && students.length) {\n      const columns = [{\n        title: '',\n        key: 'avatar',\n        render: (text, student) => /*#__PURE__*/_jsxDEV(Avatar, {\n          size: \"large\",\n          children: `${student.firstName.charAt(0).toUpperCase()}${student.lastName.charAt(0).toUpperCase()}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 19\n        }, this)\n      }, {\n        title: 'Student Id',\n        dataIndex: 'studentId',\n        key: 'studentId'\n      }, {\n        title: 'First Name',\n        dataIndex: 'firstName',\n        key: 'firstName'\n      }, {\n        title: 'Last Name',\n        dataIndex: 'lastName',\n        key: 'lastName'\n      }, {\n        title: 'Email',\n        dataIndex: 'email',\n        key: 'email'\n      }, {\n        title: 'Gender',\n        dataIndex: 'gender',\n        key: 'gender'\n      }];\n      return /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          dataSource: students,\n          columns: columns,\n          pagination: false,\n          rowKey: \"studentId\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"No Students found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/guilty/SpringBootReact/src/js/src/App.js"],"names":["React","Component","Container","getAllStudents","Table","Avatar","Spin","Icon","getIndicatorIcon","fontSize","App","state","students","isFetching","fetchStudents","setState","then","res","json","console","log","componentDidMount","render","LoadingOutlined","length","columns","title","key","text","student","firstName","charAt","toUpperCase","lastName","dataIndex"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Container from './Container';\nimport './App.css';\nimport { getAllStudents } from './client';\nimport {\n  Table,\n  Avatar,\n  Spin,\n  Icon\n} from 'antd';\n\nconst getIndicatorIcon = () => <LoadingOutlined style={{ fontSize: 24 }} spin />;\n\n\nclass App extends Component {\n\n    state = {\n        students: [],\n        isFetching: false\n    }\n\n    componentDidMount() {\n      this.fetchStudents();\n    }\n\n    fetchStudents = () => {\n      this.setState({\n        isFetching: true\n      });\n      getAllStudents()\n        .then(res => res.json()\n        .then(students => {\n          console.log(students);\n          this.setState({\n            students,\n            isFetching: false\n          });\n        }));\n    }\n\n    render() {\n\n        const { students, isFetching } = this.state;\n\n        if(isFetching) {\n          return(\n            <Container>\n              <Spin indicator={LoadingOutlined()}/>\n            </Container>\n          );\n        }\n\n        if(students && students.length) {\n            const columns = [\n              {\n                title: '',\n                key: 'avatar',\n                render: (text, student) => (\n                  <Avatar size='large'>\n                    {`${student.firstName.charAt(0).toUpperCase()}${student.lastName.charAt(0).toUpperCase()}`}\n                  </Avatar>\n                )\n              },\n              {\n                title: 'Student Id',\n                dataIndex: 'studentId',\n                key: 'studentId'\n              },\n              {\n                title: 'First Name',\n                dataIndex: 'firstName',\n                key: 'firstName'\n              },\n              {\n                title: 'Last Name',\n                dataIndex: 'lastName',\n                key: 'lastName'\n              },\n              {\n                title: 'Email',\n                dataIndex: 'email',\n                key: 'email'\n              },\n              {\n                title: 'Gender',\n                dataIndex: 'gender',\n                key: 'gender'\n              }\n            ];\n            return (\n              <Container>\n                <Table\n                  dataSource={students} \n                  columns={columns}\n                  pagination={false} \n                  rowKey='studentId'/>\n              </Container>\n            );\n        }\n        return <h1>No Students found</h1>\n    }   \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}