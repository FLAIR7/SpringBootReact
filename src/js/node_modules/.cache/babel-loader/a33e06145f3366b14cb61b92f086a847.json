{"ast":null,"code":"var _jsxFileName = \"/home/guilty/SpringBootReact/src/js/src/App.js\";\nimport React, { Component } from 'react';\nimport Container from './Container';\nimport './App.css';\nimport { getAllStudents } from './client';\nimport { Table, Avatar } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      students: []\n    };\n\n    this.fetchStudents = () => {\n      getAllStudents().then(res => res.json().then(students => {\n        console.log(students);\n        this.setState({\n          students\n        });\n      }));\n    };\n  }\n\n  componentDidMount() {\n    this.fetchStudents();\n  }\n\n  render() {\n    const {\n      students\n    } = this.state;\n\n    if (students && students.length) {\n      const columns = [{\n        title: '',\n        key: 'avatar',\n        render: (text, student) => /*#__PURE__*/_jsxDEV(Avatar, {\n          size: \"large\",\n          children: `${student.firstName.charAt(0).toUpperCase()}${student.lastName.charAt(0).toUpperCase()}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 19\n        }, this)\n      }, {\n        title: 'Student Id',\n        dataIndex: 'studentId',\n        key: 'studentId'\n      }, {\n        title: 'First Name',\n        dataIndex: 'firstName',\n        key: 'firstName'\n      }, {\n        title: 'Last Name',\n        dataIndex: 'lastName',\n        key: 'lastName'\n      }, {\n        title: 'Email',\n        dataIndex: 'email',\n        key: 'email'\n      }, {\n        title: 'Gender',\n        dataIndex: 'gender',\n        key: 'gender'\n      }];\n      return /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          dataSource: students,\n          columns: columns,\n          pagination: false,\n          rowKey: \"studentId\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"No Students found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/guilty/SpringBootReact/src/js/src/App.js"],"names":["React","Component","Container","getAllStudents","Table","Avatar","App","state","students","fetchStudents","then","res","json","console","log","setState","componentDidMount","render","length","columns","title","key","text","student","firstName","charAt","toUpperCase","lastName","dataIndex"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAO,WAAP;AACA,SAASC,cAAT,QAA+B,UAA/B;AACA,SACEC,KADF,EAEEC,MAFF,QAGO,MAHP;;;AAKA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAExBM,KAFwB,GAEhB;AACJC,MAAAA,QAAQ,EAAE;AADN,KAFgB;;AAAA,SAUxBC,aAVwB,GAUR,MAAM;AACpBN,MAAAA,cAAc,GACXO,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,GACZF,IADY,CACPF,QAAQ,IAAI;AAChBK,QAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AACA,aAAKO,QAAL,CAAc;AACZP,UAAAA;AADY,SAAd;AAGD,OANY,CADf;AAQD,KAnBuB;AAAA;;AAMxBQ,EAAAA,iBAAiB,GAAG;AAClB,SAAKP,aAAL;AACD;;AAaDQ,EAAAA,MAAM,GAAG;AACL,UAAM;AAAET,MAAAA;AAAF,QAAe,KAAKD,KAA1B;;AAEA,QAAGC,QAAQ,IAAIA,QAAQ,CAACU,MAAxB,EAAgC;AAC5B,YAAMC,OAAO,GAAG,CACd;AACEC,QAAAA,KAAK,EAAE,EADT;AAEEC,QAAAA,GAAG,EAAE,QAFP;AAGEJ,QAAAA,MAAM,EAAE,CAACK,IAAD,EAAOC,OAAP,kBACN,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,OAAb;AAAA,oBACI,GAAEA,OAAO,CAACC,SAAR,CAAkBC,MAAlB,CAAyB,CAAzB,EAA4BC,WAA5B,EAA0C,GAAEH,OAAO,CAACI,QAAR,CAAiBF,MAAjB,CAAwB,CAAxB,EAA2BC,WAA3B,EAAyC;AAD3F;AAAA;AAAA;AAAA;AAAA;AAJJ,OADc,EAUd;AACEN,QAAAA,KAAK,EAAE,YADT;AAEEQ,QAAAA,SAAS,EAAE,WAFb;AAGEP,QAAAA,GAAG,EAAE;AAHP,OAVc,EAed;AACED,QAAAA,KAAK,EAAE,YADT;AAEEQ,QAAAA,SAAS,EAAE,WAFb;AAGEP,QAAAA,GAAG,EAAE;AAHP,OAfc,EAoBd;AACED,QAAAA,KAAK,EAAE,WADT;AAEEQ,QAAAA,SAAS,EAAE,UAFb;AAGEP,QAAAA,GAAG,EAAE;AAHP,OApBc,EAyBd;AACED,QAAAA,KAAK,EAAE,OADT;AAEEQ,QAAAA,SAAS,EAAE,OAFb;AAGEP,QAAAA,GAAG,EAAE;AAHP,OAzBc,EA8Bd;AACED,QAAAA,KAAK,EAAE,QADT;AAEEQ,QAAAA,SAAS,EAAE,QAFb;AAGEP,QAAAA,GAAG,EAAE;AAHP,OA9Bc,CAAhB;AAoCA,0BACE,QAAC,SAAD;AAAA,+BACE,QAAC,KAAD;AACE,UAAA,UAAU,EAAEb,QADd;AAEE,UAAA,OAAO,EAAEW,OAFX;AAGE,UAAA,UAAU,EAAE,KAHd;AAIE,UAAA,MAAM,EAAC;AAJT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AASH;;AACD,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAxEuB;;AA2E5B,eAAeb,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Container from './Container';\nimport './App.css';\nimport { getAllStudents } from './client';\nimport {\n  Table,\n  Avatar\n} from 'antd';\n\nclass App extends Component {\n\n    state = {\n        students: []\n    }\n\n    componentDidMount() {\n      this.fetchStudents();\n    }\n\n    fetchStudents = () => {\n      getAllStudents()\n        .then(res => res.json()\n        .then(students => {\n          console.log(students);\n          this.setState({\n            students\n          });\n        }));\n    }\n\n    render() {\n        const { students } = this.state;\n\n        if(students && students.length) {\n            const columns = [\n              {\n                title: '',\n                key: 'avatar',\n                render: (text, student) => (\n                  <Avatar size='large'>\n                    {`${student.firstName.charAt(0).toUpperCase()}${student.lastName.charAt(0).toUpperCase()}`}\n                  </Avatar>\n                )\n              },\n              {\n                title: 'Student Id',\n                dataIndex: 'studentId',\n                key: 'studentId'\n              },\n              {\n                title: 'First Name',\n                dataIndex: 'firstName',\n                key: 'firstName'\n              },\n              {\n                title: 'Last Name',\n                dataIndex: 'lastName',\n                key: 'lastName'\n              },\n              {\n                title: 'Email',\n                dataIndex: 'email',\n                key: 'email'\n              },\n              {\n                title: 'Gender',\n                dataIndex: 'gender',\n                key: 'gender'\n              }\n            ];\n            return (\n              <Container>\n                <Table\n                  dataSource={students} \n                  columns={columns}\n                  pagination={false} \n                  rowKey='studentId'/>\n              </Container>\n            );\n        }\n        return <h1>No Students found</h1>\n    }   \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}